name: Provision Bank App

on:
  workflow_dispatch:
  push:
    branches:
      - main  # or the branch you want to trigger the workflow

jobs:
  Deploy-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  # specify your desired region

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Run Terraform initialize
        working-directory: ./terraform
        run: terraform init --backend-config="vars/dev/dev.backend.tfvars"

      - name: Run Terraform pan
        working-directory: ./terraform
        run: terraform plan --var-file="vars/dev/dev.tfvars" -out=plan-dev-${{ github.sha }}.out

      - name: Publish TF plan artifact 
        uses: actions/upload-artifact@v3
        with:
          name: plan-dev-${{ github.sha }}.out
          path: terraform/plan-dev-${{ github.sha }}.out
          if-no-files-found: error

  deploy-approval:
    needs:
      - Deploy-plan
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Application
        run: echo "Deploying application..."

  Deploy:
    runs-on: ubuntu-latest
    needs: [Deploy-approval]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  # specify your desired region

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Run Terraform initialize
        working-directory: ./terraform
        run: terraform init --backend-config="vars/dev/dev.backend.tfvars"

      - name: Download plan out
        uses: actions/download-artifact@v3
        with:
          name: plan-dev-${{ github.sha }}.out 

      #- name: Copy Plan
      #  run: |
      #    cp plan-test-${{ github.sha }}.out terraform/

      #- name: Terraform Apply - Dev
      #  run: |
      #    terraform apply -auto-approve -input=false -var-file="vars/test/test.tfvars"
      #  working-directory: terraform/
