name: CI/CD Pipeline for Global Banking App

on:
  push:
    branches:
      - feature/k8  # Trigger on pushes to the main branch

jobs:
  build-and-push-docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - account-service  # Replace with actual service names in the `banking-services` folder
          - auth-service
          - transaction-service
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          ls -lart
          cd banking-services
          ls -lart
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest -f ${{ matrix.service }}/dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest

  deploy-to-eks:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  # Change to your EKS region

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ap-south-1 --name amcdemo

      - name: Apply Kubernetes Manifests
        run: |
          ls -lart
          #kubectl apply -k kubernetes/base/deployments
          #kubectl apply -k kubernetes/base/services # Apply base configs
          #kubectl apply -f kubernetes/config
          #kubectl apply -f kubernetes/secrets
          #kubectl apply -f kubernetes/ingress
